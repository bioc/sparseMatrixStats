on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 8 * * 5'

name: R-CMD-check-release

jobs:
  R-CMD-check-release:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"

    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.image }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }} - ${{ matrix.config.bioc }} - ${{ matrix.config.image }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: windows-latest, r: 'devel ', bioc: 'devel'}
          - { os: macOS-latest, r: 'devel', bioc: 'devel'}
          - { os: ubuntu-latest, r: 'devel', bioc: 'devel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Set up R
        uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@master

      - name: Install remotes
        run: |
          install.packages('remotes')
        shell: Rscript {0}

      - name: Set BiocManager version
        run: |
          install.packages('BiocManager')
          BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE)
        shell: Rscript {0}

      - name: Install matrixStats
        run: |
           install.packages("matrixStats")
           remotes::install_github("const-ae/MatrixGenerics", ref = "master")
        shell: Rscript {0}

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
          sudo apt-get update && sudo apt-get -y install libcurl4-openssl-dev

      - name: Install further dependencies
        run: |
         install.packages(c("sessioninfo", "rcmdcheck"))
         BiocManager::install(c("BiocCheck", "BiocStyle"))
         install.packages(c("Rcpp", "rmarkdown", "testthat", "knitr", "bench", "rmarkdown"))
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: BiocCheck
        run: |
          BiocCheck::BiocCheck(".")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-bioc-${{ matrix.config.bioc }}-branch-release-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == 'devel'
        run: |
          install.packages("covr")
          covr::codecov(type = "all", token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}
